package helper

import (
	"errors"
	"strings"
)

type PhoneNumber string

var (
	ErrPhoneNumberLength      = errors.New("phone number: invalid length")
	ErrPhoneNumberPrefix      = errors.New("phone number: should start with '+'")
	ErrPhoneNumberCountryCode = errors.New("phone number: invalid country")
)

var phoneCountryCodes map[string]string = map[string]string{
	"+93":      "+93",
	"+355":     "+355",
	"+213":     "+213",
	"+1-684":   "+1-684",
	"+376":     "+376",
	"+244":     "+244",
	"+1-264":   "+1-264",
	"+672":     "+672",
	"+1-268":   "+1-268",
	"+54":      "+54",
	"+374":     "+374",
	"+297":     "+297",
	"+61":      "+61",
	"+43":      "+43",
	"+994":     "+994",
	"+1-242":   "+1-242",
	"+973":     "+973",
	"+880":     "+880",
	"+1-246":   "+1-246",
	"+375":     "+375",
	"+32":      "+32",
	"+501":     "+501",
	"+229":     "+229",
	"+1-441":   "+1-441",
	"+975":     "+975",
	"+591":     "+591",
	"+387":     "+387",
	"+267":     "+267",
	"+55":      "+55",
	"+246":     "+246",
	"+1-284":   "+1-284",
	"+673":     "+673",
	"+359":     "+359",
	"+226":     "+226",
	"+257":     "+257",
	"+855":     "+855",
	"+237":     "+237",
	"+1":       "+1",
	"+238":     "+238",
	"+1-345":   "+1-345",
	"+236":     "+236",
	"+235":     "+235",
	"+56":      "+56",
	"+86":      "+86",
	"+57":      "+57",
	"+269":     "+269",
	"+682":     "+682",
	"+506":     "+506",
	"+385":     "+385",
	"+53":      "+53",
	"+599":     "+599",
	"+357":     "+357",
	"+420":     "+420",
	"+243":     "+243",
	"+45":      "+45",
	"+253":     "+253",
	"+1-767":   "+1-767",
	"+1-809":   "+1-809",
	"+1-829":   "+1-829",
	"+1-849":   "+1-849",
	"+670":     "+670",
	"+593":     "+593",
	"+20":      "+20",
	"+503":     "+503",
	"+240":     "+240",
	"+291":     "+291",
	"+372":     "+372",
	"+251":     "+251",
	"+500":     "+500",
	"+298":     "+298",
	"+679":     "+679",
	"+358":     "+358",
	"+33":      "+33",
	"+689":     "+689",
	"+241":     "+241",
	"+220":     "+220",
	"+995":     "+995",
	"+49":      "+49",
	"+233":     "+233",
	"+350":     "+350",
	"+30":      "+30",
	"+299":     "+299",
	"+1-473":   "+1-473",
	"+1-671":   "+1-671",
	"+502":     "+502",
	"+44-1481": "+44-1481",
	"+224":     "+224",
	"+245":     "+245",
	"+592":     "+592",
	"+509":     "+509",
	"+504":     "+504",
	"+852":     "+852",
	"+36":      "+36",
	"+354":     "+354",
	"+91":      "+91",
	"+62":      "+62",
	"+98":      "+98",
	"+964":     "+964",
	"+353":     "+353",
	"+44-1624": "+44-1624",
	"+972":     "+972",
	"+39":      "+39",
	"+225":     "+225",
	"+1-876":   "+1-876",
	"+81":      "+81",
	"+44-1534": "+44-1534",
	"+962":     "+962",
	"+7":       "+7",
	"+254":     "+254",
	"+686":     "+686",
	"+383":     "+383",
	"+965":     "+965",
	"+996":     "+996",
	"+856":     "+856",
	"+371":     "+371",
	"+961":     "+961",
	"+266":     "+266",
	"+231":     "+231",
	"+218":     "+218",
	"+423":     "+423",
	"+370":     "+370",
	"+352":     "+352",
	"+853":     "+853",
	"+389":     "+389",
	"+261":     "+261",
	"+265":     "+265",
	"+60":      "+60",
	"+960":     "+960",
	"+223":     "+223",
	"+356":     "+356",
	"+692":     "+692",
	"+222":     "+222",
	"+230":     "+230",
	"+262":     "+262",
	"+52":      "+52",
	"+691":     "+691",
	"+373":     "+373",
	"+377":     "+377",
	"+976":     "+976",
	"+382":     "+382",
	"+1-664":   "+1-664",
	"+212":     "+212",
	"+258":     "+258",
	"+95":      "+95",
	"+264":     "+264",
	"+674":     "+674",
	"+977":     "+977",
	"+31":      "+31",
	"+687":     "+687",
	"+64":      "+64",
	"+505":     "+505",
	"+227":     "+227",
	"+234":     "+234",
	"+683":     "+683",
	"+850":     "+850",
	"+1-670":   "+1-670",
	"+47":      "+47",
	"+968":     "+968",
	"+92":      "+92",
	"+680":     "+680",
	"+970":     "+970",
	"+507":     "+507",
	"+675":     "+675",
	"+595":     "+595",
	"+51":      "+51",
	"+63":      "+63",
	"+48":      "+48",
	"+351":     "+351",
	"+1-787":   "+1-787",
	"+1-939":   "+1-939",
	"+974":     "+974",
	"+242":     "+242",
	"+40":      "+40",
	"+250":     "+250",
	"+590":     "+590",
	"+290":     "+290",
	"+1-869":   "+1-869",
	"+1-758":   "+1-758",
	"+508":     "+508",
	"+1-784":   "+1-784",
	"+685":     "+685",
	"+378":     "+378",
	"+239":     "+239",
	"+966":     "+966",
	"+221":     "+221",
	"+381":     "+381",
	"+248":     "+248",
	"+232":     "+232",
	"+65":      "+65",
	"+1-721":   "+1-721",
	"+421":     "+421",
	"+386":     "+386",
	"+677":     "+677",
	"+252":     "+252",
	"+27":      "+27",
	"+82":      "+82",
	"+211":     "+211",
	"+34":      "+34",
	"+94":      "+94",
	"+249":     "+249",
	"+597":     "+597",
	"+268":     "+268",
	"+46":      "+46",
	"+41":      "+41",
	"+963":     "+963",
	"+886":     "+886",
	"+992":     "+992",
	"+255":     "+255",
	"+66":      "+66",
	"+228":     "+228",
	"+690":     "+690",
	"+676":     "+676",
	"+1-868":   "+1-868",
	"+216":     "+216",
	"+90":      "+90",
	"+993":     "+993",
	"+1-649":   "+1-649",
	"+688":     "+688",
	"+1-340":   "+1-340",
	"+256":     "+256",
	"+380":     "+380",
	"+971":     "+971",
	"+44":      "+44",
	"+598":     "+598",
	"+998":     "+998",
	"+678":     "+678",
	"+379":     "+379",
	"+58":      "+58",
	"+84":      "+84",
	"+681":     "+681",
	"+967":     "+967",
	"+260":     "+260",
	"+263":     "+263",
}

func (phone PhoneNumber) Valid() error {
	const PHONE_NUMBER_PREFIX = 0x2B
	const MIN_LENGTH = 10
	const MAX_LENGTH = 16
	const LONGEST_COUNTRY_CODE = 8 // "+" + 7 the longest character of country code(e.g: 44-1534(Jersey country))
	/**
		The shortest country codes don't have "-" character,
		so we assume the shortest country code just has 1 character (e.g: 7 Kazakhstan)
	**/
	var COUNTRY_CODE_START_AT_INDEX = 1

	if strings.Contains(string(phone), "-") {
		/**
			If the country codes has "-" character,
			we can say the minimum length of country code is 3

			Example:
				+1-649
				+1-340
				+1-868
				+44-1624

			As we see example of county codes above, all of them has "-" and at least 3 characters
		**/
		COUNTRY_CODE_START_AT_INDEX = 3
	}

	if len(phone) < MIN_LENGTH || len(phone) > MAX_LENGTH {
		return ErrPhoneNumberLength
	}

	if phone[0] != PHONE_NUMBER_PREFIX {
		return ErrPhoneNumberPrefix
	}

	var isValid bool
	for i := COUNTRY_CODE_START_AT_INDEX; i < LONGEST_COUNTRY_CODE; i++ {
		codeWithPrefix := phone[:i+1]

		_, ok := phoneCountryCodes[string(codeWithPrefix)]

		if ok {
			isValid = true
			break
		}
	}

	if !isValid {
		return ErrPhoneNumberCountryCode
	}

	return nil
}
